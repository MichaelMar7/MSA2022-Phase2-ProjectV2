{"ast":null,"code":"\"use strict\";\n\nvar _requestPromise = _interopRequireDefault(require(\"request-promise\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar env = process.env;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.substr(1);\n}\n/**\n * ClashApi - Provides an easy way to get started with the Clash of Clans API.\n *\n * All fetches return a promise using\n *\n * @example\n * let client = clashApi({\n *    token: yourApiToken // Optional, can also use COC_API_TOKEN env variable\n * });\n */\n\n\nvar ClashApi = /*#__PURE__*/function () {\n  function ClashApi() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        uri = _ref.uri,\n        token = _ref.token,\n        request = _ref.request;\n\n    _classCallCheck(this, ClashApi);\n    /**\n     * Personal Clash of Clans API token.\n     */\n\n\n    this.token = token || env.COC_API_TOKEN;\n    this.uri = uri || _config[\"default\"].uri;\n    this._requestDefaults = request || {};\n\n    if (!this.token) {\n      throw new Error('Must define a token option or COC_API_TOKEN env variable');\n    }\n  }\n\n  _createClass(ClashApi, [{\n    key: \"requestOptions\",\n    value: function requestOptions(opts) {\n      return (0, _lodash.merge)({\n        headers: {\n          Accept: 'application/json',\n          authorization: \"Bearer \".concat(this.token)\n        },\n        json: true\n      }, opts, this._requestDefaults);\n    }\n    /**\n     * Get information about a single clan by clan tag. Clan tags can be found using clan search operation.\n     *\n     * @example\n     * client\n     *    .clanByTag('#UPC2UQ')\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan to retrieve.\n     */\n\n  }, {\n    key: \"clanByTag\",\n    value: function clanByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag))\n      }));\n    }\n    /**\n     * List clan members.\n     *\n     * @example\n     * client\n     *    .clanMembersByTag('#UPC2UQ')\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan whose members to retrieve.\n     */\n\n  }, {\n    key: \"clanMembersByTag\",\n    value: function clanMembersByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/members\")\n      }));\n    }\n    /**\n     * Retrieve clan's clan war log.\n     *\n     * @example\n     * client\n     *    .clanWarlogByTag('#UPC2UQ')\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan whose war log to retrieve.\n     */\n\n  }, {\n    key: \"clanWarlogByTag\",\n    value: function clanWarlogByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/warlog\")\n      }));\n    }\n    /**\n     * Retrieve information about clan's current clan war.\n     *\n     * @example\n     * client\n     *    .clanCurrentWarByTag(`#UPC2UQ`)\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan whose current clan war information to retrieve.\n     */\n\n  }, {\n    key: \"clanCurrentWarByTag\",\n    value: function clanCurrentWarByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/currentwar\")\n      }));\n    }\n    /**\n     * Retrieve information about clan's current clan war league group.\n     *\n     * @param {string} tag - Tag of the clan whose current clan war league group to retrieve.\n     */\n\n  }, {\n    key: \"clanLeague\",\n    value: function clanLeague(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/currentwar/leaguegroup\")\n      }));\n    }\n  }, {\n    key: \"clanLeagueWars\",\n    value: function clanLeagueWars(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clanwarleagues/wars/\").concat(encodeURIComponent(tag))\n      }));\n    }\n    /**\n     * Search all clans by name and/or filtering the results using various criteria.\n     * At least one filtering criteria must be defined and if name is used as part of search,\n     * it is required to be at least three characters long.\n     *\n     * It is not possible to specify ordering for results so clients should not rely on any\n     * specific ordering as that may change in the future releases of the API.\n     *\n     * @example\n     * client\n     *    .clans()\n     *    .withWarFrequency('always')\n     *    .withMinMembers(25)\n     *    .fetch()\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err))\n     *\n     * @see https://developer.clashofclans.com/api-docs/index.html#!/clans/searchClans\n     */\n\n  }, {\n    key: \"clans\",\n    value: function clans() {\n      var qs = {};\n      var dsl = ['name', 'warFrequency', 'locationId', 'minMembers', 'maxMembers', 'minClanPoints', 'minClanLevel', 'limit', 'after', 'before'].reduce(function (builder, field) {\n        builder[\"with\".concat(capitalizeFirstLetter(field))] = function (input) {\n          qs[field] = input;\n          return builder;\n        };\n\n        return builder;\n      }, {\n        fetch: function () {\n          return (0, _requestPromise[\"default\"])(this.requestOptions({\n            qs: qs,\n            uri: \"\".concat(this.uri, \"/clans\")\n          }));\n        }.bind(this)\n      });\n      return dsl;\n    }\n    /**\n     * List all available locations.\n     *\n     * @example\n     * client\n     *    .locations()\n     *    .withId(locationId)\n     *    .byPlayer()\n     *    .fetch()\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     */\n\n  }, {\n    key: \"locations\",\n    value: function locations() {\n      var dsl = {\n        fetch: function () {\n          return (0, _requestPromise[\"default\"])(this.requestOptions({\n            uri: \"\".concat(this.uri, \"/locations\")\n          }));\n        }.bind(this),\n        withId: function (locId) {\n          var rankId;\n          var rankingDslMembers = {\n            byClan: function byClan() {\n              rankId = 'clans';\n              return rankingDsl;\n            },\n            byPlayer: function byPlayer() {\n              rankId = 'players';\n              return rankingDsl;\n            }\n          };\n          var rankingDsl = assign({\n            fetch: function () {\n              return (0, _requestPromise[\"default\"])(this.requestOptions({\n                uri: \"\".concat(this.uri, \"/locations/\").concat(encodeURIComponent(locId), \"/rankings/\").concat(rankId)\n              }));\n            }.bind(this)\n          }, rankingDslMembers);\n          var locDsl = assign({\n            fetch: function fetch() {\n              return (0, _requestPromise[\"default\"])(this.requestOptions({\n                uri: \"\".concat(this.uri, \"/locations/\").concat(encodeURIComponent(locId))\n              }));\n            }\n          }, rankingDslMembers);\n          return locDsl;\n        }.bind(this)\n      };\n      return dsl;\n    }\n    /**\n     * Get list of leagues.\n     */\n\n  }, {\n    key: \"leagues\",\n    value: function leagues() {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/leagues\")\n      }));\n    }\n    /**\n     * Get information about a single player by player tag. Player tags can be found either in game or by from clan member lists.\n     */\n\n  }, {\n    key: \"playerByTag\",\n    value: function playerByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/players/\").concat(encodeURIComponent(tag))\n      }));\n    }\n  }]);\n\n  return ClashApi;\n}();\n\nvar factory = function factory(config) {\n  return new ClashApi(config);\n};\n\nfactory.ClashApi = ClashApi;\nmodule.exports = factory;","map":{"version":3,"names":["_requestPromise","_interopRequireDefault","require","_config","_lodash","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","env","process","capitalizeFirstLetter","string","charAt","toUpperCase","substr","ClashApi","_ref","arguments","undefined","uri","token","request","COC_API_TOKEN","_requestDefaults","Error","value","requestOptions","opts","merge","headers","Accept","authorization","concat","json","clanByTag","tag","encodeURIComponent","clanMembersByTag","clanWarlogByTag","clanCurrentWarByTag","clanLeague","clanLeagueWars","clans","qs","dsl","reduce","builder","field","input","fetch","bind","locations","withId","locId","rankId","rankingDslMembers","byClan","rankingDsl","byPlayer","assign","locDsl","leagues","playerByTag","factory","config","module","exports"],"sources":["C:/Users/micha/MSA2022Folders/MSA2022Phase2V2/MSA2022-Phase2-ProjectV2/Front-End/Main-Project/my-app/node_modules/clash-of-clans-api/dist/index.js"],"sourcesContent":["\"use strict\";\n\nvar _requestPromise = _interopRequireDefault(require(\"request-promise\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar env = process.env;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.substr(1);\n}\n/**\n * ClashApi - Provides an easy way to get started with the Clash of Clans API.\n *\n * All fetches return a promise using\n *\n * @example\n * let client = clashApi({\n *    token: yourApiToken // Optional, can also use COC_API_TOKEN env variable\n * });\n */\n\n\nvar ClashApi = /*#__PURE__*/function () {\n  function ClashApi() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        uri = _ref.uri,\n        token = _ref.token,\n        request = _ref.request;\n\n    _classCallCheck(this, ClashApi);\n\n    /**\n     * Personal Clash of Clans API token.\n     */\n    this.token = token || env.COC_API_TOKEN;\n    this.uri = uri || _config[\"default\"].uri;\n    this._requestDefaults = request || {};\n\n    if (!this.token) {\n      throw new Error('Must define a token option or COC_API_TOKEN env variable');\n    }\n  }\n\n  _createClass(ClashApi, [{\n    key: \"requestOptions\",\n    value: function requestOptions(opts) {\n      return (0, _lodash.merge)({\n        headers: {\n          Accept: 'application/json',\n          authorization: \"Bearer \".concat(this.token)\n        },\n        json: true\n      }, opts, this._requestDefaults);\n    }\n    /**\n     * Get information about a single clan by clan tag. Clan tags can be found using clan search operation.\n     *\n     * @example\n     * client\n     *    .clanByTag('#UPC2UQ')\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan to retrieve.\n     */\n\n  }, {\n    key: \"clanByTag\",\n    value: function clanByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag))\n      }));\n    }\n    /**\n     * List clan members.\n     *\n     * @example\n     * client\n     *    .clanMembersByTag('#UPC2UQ')\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan whose members to retrieve.\n     */\n\n  }, {\n    key: \"clanMembersByTag\",\n    value: function clanMembersByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/members\")\n      }));\n    }\n    /**\n     * Retrieve clan's clan war log.\n     *\n     * @example\n     * client\n     *    .clanWarlogByTag('#UPC2UQ')\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan whose war log to retrieve.\n     */\n\n  }, {\n    key: \"clanWarlogByTag\",\n    value: function clanWarlogByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/warlog\")\n      }));\n    }\n    /**\n     * Retrieve information about clan's current clan war.\n     *\n     * @example\n     * client\n     *    .clanCurrentWarByTag(`#UPC2UQ`)\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     *\n     * @param {string} tag - Tag of the clan whose current clan war information to retrieve.\n     */\n\n  }, {\n    key: \"clanCurrentWarByTag\",\n    value: function clanCurrentWarByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/currentwar\")\n      }));\n    }\n    /**\n     * Retrieve information about clan's current clan war league group.\n     *\n     * @param {string} tag - Tag of the clan whose current clan war league group to retrieve.\n     */\n\n  }, {\n    key: \"clanLeague\",\n    value: function clanLeague(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clans/\").concat(encodeURIComponent(tag), \"/currentwar/leaguegroup\")\n      }));\n    }\n  }, {\n    key: \"clanLeagueWars\",\n    value: function clanLeagueWars(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/clanwarleagues/wars/\").concat(encodeURIComponent(tag))\n      }));\n    }\n    /**\n     * Search all clans by name and/or filtering the results using various criteria.\n     * At least one filtering criteria must be defined and if name is used as part of search,\n     * it is required to be at least three characters long.\n     *\n     * It is not possible to specify ordering for results so clients should not rely on any\n     * specific ordering as that may change in the future releases of the API.\n     *\n     * @example\n     * client\n     *    .clans()\n     *    .withWarFrequency('always')\n     *    .withMinMembers(25)\n     *    .fetch()\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err))\n     *\n     * @see https://developer.clashofclans.com/api-docs/index.html#!/clans/searchClans\n     */\n\n  }, {\n    key: \"clans\",\n    value: function clans() {\n      var qs = {};\n      var dsl = ['name', 'warFrequency', 'locationId', 'minMembers', 'maxMembers', 'minClanPoints', 'minClanLevel', 'limit', 'after', 'before'].reduce(function (builder, field) {\n        builder[\"with\".concat(capitalizeFirstLetter(field))] = function (input) {\n          qs[field] = input;\n          return builder;\n        };\n\n        return builder;\n      }, {\n        fetch: function () {\n          return (0, _requestPromise[\"default\"])(this.requestOptions({\n            qs: qs,\n            uri: \"\".concat(this.uri, \"/clans\")\n          }));\n        }.bind(this)\n      });\n      return dsl;\n    }\n    /**\n     * List all available locations.\n     *\n     * @example\n     * client\n     *    .locations()\n     *    .withId(locationId)\n     *    .byPlayer()\n     *    .fetch()\n     *    .then(response => console.log(response))\n     *    .catch(err => console.log(err));\n     */\n\n  }, {\n    key: \"locations\",\n    value: function locations() {\n      var dsl = {\n        fetch: function () {\n          return (0, _requestPromise[\"default\"])(this.requestOptions({\n            uri: \"\".concat(this.uri, \"/locations\")\n          }));\n        }.bind(this),\n        withId: function (locId) {\n          var rankId;\n          var rankingDslMembers = {\n            byClan: function byClan() {\n              rankId = 'clans';\n              return rankingDsl;\n            },\n            byPlayer: function byPlayer() {\n              rankId = 'players';\n              return rankingDsl;\n            }\n          };\n          var rankingDsl = assign({\n            fetch: function () {\n              return (0, _requestPromise[\"default\"])(this.requestOptions({\n                uri: \"\".concat(this.uri, \"/locations/\").concat(encodeURIComponent(locId), \"/rankings/\").concat(rankId)\n              }));\n            }.bind(this)\n          }, rankingDslMembers);\n          var locDsl = assign({\n            fetch: function fetch() {\n              return (0, _requestPromise[\"default\"])(this.requestOptions({\n                uri: \"\".concat(this.uri, \"/locations/\").concat(encodeURIComponent(locId))\n              }));\n            }\n          }, rankingDslMembers);\n          return locDsl;\n        }.bind(this)\n      };\n      return dsl;\n    }\n    /**\n     * Get list of leagues.\n     */\n\n  }, {\n    key: \"leagues\",\n    value: function leagues() {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/leagues\")\n      }));\n    }\n    /**\n     * Get information about a single player by player tag. Player tags can be found either in game or by from clan member lists.\n     */\n\n  }, {\n    key: \"playerByTag\",\n    value: function playerByTag(tag) {\n      return (0, _requestPromise[\"default\"])(this.requestOptions({\n        uri: \"\".concat(this.uri, \"/players/\").concat(encodeURIComponent(tag))\n      }));\n    }\n  }]);\n\n  return ClashApi;\n}();\n\nvar factory = function factory(config) {\n  return new ClashApi(config);\n};\n\nfactory.ClashApi = ClashApi;\nmodule.exports = factory;"],"mappings":"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"},"metadata":{},"sourceType":"script"}